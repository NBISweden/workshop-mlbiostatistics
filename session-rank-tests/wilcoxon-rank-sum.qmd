---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Wilcoxon rank sum test

*two unrelated groups*

```{r}
#| message: false
#| warning: false
#| include: false

# load libraries
library(tidyverse)
library(magrittr)
library(kableExtra)
```

Wilcoxon rank sum test is used to assess whether an outcome variable differs between two exposure groups, so it equivalent to the non-parametric two sample *t* test. It examines whether **the median difference between two groups is equal to zero**. Let's follow an example to get a better idea how it works. 

::: {#exm-wilcoxon-ranksum}
## Wilcoxon rank sum test

We have weighted new born babies born to 5 non-smokers and 6 smokers. The measurements, with weight in kg, are shown below. Let's see if there is enough evidence to reject the null hypothesis of the median difference between the groups being equal to zero.

The data are shown below:
```{r}
#| include: false
#| echo: false

# previous data with more observations (from Kirkwood "Medical statisics")
# got shorted so it's easier to display the example
# bw.nonsmokers <- c(3.99, 3.89, 3.6, 3.73, 3.31, 3.7, 4.08, 3.61, 3.83, 3.41, 4.13, 3.36, 3.54, 3.51, 2.71)
# bw.smokers <- c(3.18, 2.74, 2.9, 3.27, 3.65, 3.42, 3.23, 2.86, 3.6, 3.65, 3.69, 3.53, 2.38, 2.34)
```

```{r}
# input data
bw.nonsmokers <- c(3.99, 3.89, 3.6, 3.73, 3.31)
bw.smokers <- c(3.18, 2.74, 2.9, 3.27, 3.15, 2.42)

# group labels
grp.nonsmokers <- rep("No", 1, length(bw.nonsmokers))
grp.smokers <- rep("Yes", 1, length(bw.smokers))

# no. of observations per group
n.nonsmokers <- length(bw.nonsmokers)
n.smokers <- length(bw.smokers)

# put data into one data frame
data.babies <- data.frame(id = 1:(n.nonsmokers + n.smokers),
                          weight = c(bw.nonsmokers, bw.smokers),
                          smoking = c(grp.nonsmokers, grp.smokers))

# print data
data.babies %>%
  print()

```

:::

## Define the null and alternative hypothesis under study

$H_0:$  the difference between the medians of the two groups equals to zero

$H_1:$  the difference between the medians of the two groups does not equals to zero

## Test statistics: rank the values

We rank the values of the weights from both groups together in *ascending* order of magnitude. If any of the values are equal, we average their ranks.

```{r}
# rank weight variable in ascending order
df.wilcoxon.rank.sum <- data.babies %>%
  mutate(rank = rank(weight)) %>%
  print()

```

## Test statistics: sum up the ranks in the smaller group

We add up the ranks in the group with the smaller sample size. If both groups have equal number of measurements just pick one group. Here, the smaller group are the no smokers, and the rank sum up to $T=45$

```{r}
# sum up ranks for the smaller group
data.sumrank <- df.wilcoxon.rank.sum %>%
  group_by(smoking) %>%
  summarize(T = sum(rank)) %>% 
  filter(smoking == "No") %>%
  pull(T) %>%
  print()

```

## Test statistics: find & interpret the *P*-value

We compare the $T$ value with the values in "Critical range for the Wilcoxon rank sum test" found online or [here](statstable/Wilcoxon-rank-sum-test.pdf). The range shown for $P=0.05$ is from 18 to 42 for sample size 5 and 6 respectively. $T$ value below 18 or above 42 corresponds to $P-value < 0.05$. In our case $T=45$ so above 42, hence we have enough evidence to reject the null hypothesis that the median birth weight of children born to smokers is the same as the median birth weight of children born to non-smokers.

## In `R`

In R we compute the test with `kruskal.test()` function changing `paired` parameter to False.
```{r}
#| code-fold: false

# compute Wilcoxon rank sum test
wilcox.test(data.babies$weight ~ data.babies$smoking, 
            exact = T, 
            paired = F)
```

## Note on confidence intervals

To get the confidence intervals we could set `conf.int = T`: 
```{r}
#| code-fold: false

# compute Wilcoxon rank sum test incl. CI
wilcox.test(data.babies$weight ~ data.babies$smoking, 
            exact = F, 
            paired = F, 
            conf.int = T)
```

or we could obtain CI via bootstrapping as we have seen earlier today:
```{r}
#| code-fold: false

# calculate bootstrapping CI
n <- 1000 # number of bootstrapped samples
v.mdiff <- c() # vector to hold difference in means for each iteration

for (i in 1:n){
  s.nonsmokers <- sample(bw.nonsmokers, replace = T) # sampling from nonsmokers
  s.smokers <- sample(bw.smokers, replace = T) # sampling from smokers

  m.nonsmokers <- median(s.nonsmokers) # calculate median of nonsmokers
  m.smokers <- median(s.smokers) # calculate median of nonsmokers

  v.mdiff[i] <- m.nonsmokers - m.smokers # difference in median
}

# use percentiles to calculate 95% CI, top and bottom 2.5%
CI.95 <- quantile(v.mdiff, probs = c(0.025, 0.975))
print(CI.95)

```


