---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Exercises

```{r, include=T, message=FALSE, warning=FALSE}
# load libraries
library(tidyverse)
library(kableExtra)
library(ggplot2)
library(ggbeeswarm)
library(gridExtra)
```


::: {#exr-diabetes}

## Summarize diabetes data

Use below code to load diabetes data set and calculate `BMI` and add categorical variable `obese` (Yes) if $BMI \ge 30$ and No otherwise. Summarize variables: `obese`, `age` and `gender` reporting mean and sample standard deviation for numerical variables and counts and percentage per group for categorical variables.

:::

```{r}
#| code-fold: false

library(faraway)
library(tidyverse)

inch2m <- 2.54/100
pound2kg <- 0.45
data_diabetes <- diabetes %>%
  mutate(height  = height * inch2m, height = round(height, 2)) %>% 
  mutate(waist = waist * inch2m) %>%  
  mutate(weight = weight * pound2kg, weight = round(weight, 2)) %>%
  mutate(BMI = weight / height^2, BMI = round(BMI, 2)) %>% 
  mutate(obese= cut(BMI, breaks = c(0, 29.9, 100), labels = c("No", "Yes"))) 
  
```


::: {#exr-diabetes-plot}

## Plot diabetes data

Try various plots to visualize diabetes variables: `BMI` and `gender`. Start by making a histogram and density plot for BMI and box plot of BMI stratified by gender status. Can you think of any other plots that may be useful here to visualize the relationships between BMI and gender?

:::

## Solutions: Descriptive statistics {-}  

::: {.solution}
@exr-diabetes
:::

Age is a numerical variable and we can calculate mean and sample standard deviation for example as below: 

```{r}
#| code-fold: false
data_diabetes %>%
  select(age) %>%
  summarize(age_mean = mean(age, na.rm = T), 
            age_sd = sd(age, na.rm = T)) %>%
  print()

```

Gender and obesity status are categorical variables and we can calculate counts and percentages per groups as below:
```{r}
#| code-fold: false

summary_gender <- data_diabetes %>%
  select(gender) %>%
  group_by(gender) %>%
  summarize(n = n()) %>%
  mutate(percent = n * 100 / nrow(data_diabetes)) %>%
  print()
  
summary_obese <- data_diabetes %>%
  select(obese) %>%
  group_by(obese) %>%
  summarize(n = n()) %>%
  mutate(percent = n * 100 / nrow(data_diabetes)) %>%
  print()
```

Alternatively, we can use one of the many R data summaries packages, for instance `arsenal` to summarize obesity status by age and gender.
```{r}
#| messages: false
#| warning: false
#| collapse: true
#| code-fold: false
#| results: asis

library(arsenal)

tab1 <- tableby(obese ~ gender + age, data=data_diabetes)
summary(tab1)

```

Another popular package is `gtsummary` that calculates descriptive statistics for continuous, categorical, and dichotomous variables in R, and presents the results in customizable summary table ready for publication. 

```{r}
#| messages: false
#| warning: false
#| collapse: true
#| code-fold: false

library(gtsummary)

data_diabetes %>%
  select(age, gender, obese) %>%
  tbl_summary(by = obese, 
              statistic = list(all_continuous() ~ "{mean} ({sd})"))

```



::: {.solution}
@exr-diabetes-plot
:::

```{r}
#| code-fold: false
#| collapse: true
#| fig-keep: all
#| message: false
#| warning: false

font.size <- 12
col.blue.light <- "#a6cee3"
col.blue.dark <- "#1f78b4"
my.ggtheme <- theme(axis.title = element_text(size = font.size), 
        axis.text = element_text(size = font.size), 
        legend.text = element_text(size = font.size), 
        legend.title = element_blank(), 
        legend.position = "top", 
        axis.title.y = element_text(angle = 0)) + theme_bw()
  
plt_hist <- data_diabetes %>%
  ggplot(aes(x = BMI)) +
  geom_histogram() + 
  my.ggtheme

plt_density <- data_diabetes %>%
  ggplot(aes(x = BMI)) +
  geom_density() + 
  my.ggtheme

plt_boxplot <- data_diabetes %>%
  ggplot(aes(x = gender, y = BMI)) + 
  geom_boxplot() + 
  my.ggtheme
  

plt_hist
plt_density
plt_boxplot           

```

In addition, we could for instance try beeswarm plot and/or histogram stratified by gender. Or we can try also overlaying box plots over the jitter plot either for all BMI variables or separately for males and females. Sometimes, it may be also a good idea to plot summary statistics, e.g. a barplot at a height of means and error bars representing standard deviation, error bars or confidence intervals. See this post for inspiration if you'd like to try plotting the summary statistics instead [http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/](http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/)



