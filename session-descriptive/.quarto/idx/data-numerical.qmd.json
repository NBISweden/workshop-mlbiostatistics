{"title":"Numerical data","markdown":{"yaml":{"output":"html_document","editor_options":{"chunk_output_type":"console"}},"headingText":"Numerical data","containsRefs":false,"markdown":"\n\n```{r}\n#| message: false\n#| warning: false\n\n# load libraries\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(faraway)\nlibrary(scales)\nlibrary(ggbeeswarm)\nlibrary(gridExtra)\n\n# define generic ggplot theme\nfont.size <- 12\ncol.blue.light <- \"#a6cee3\"\ncol.blue.dark <- \"#1f78b4\"\nmy.ggtheme <- theme(axis.title = element_text(size = font.size), \n        axis.text = element_text(size = font.size), \n        legend.text = element_text(size = font.size), \n        legend.title = element_blank(), \n        legend.position = \"top\", \n        axis.title.y = element_text(angle = 0)) \n\n# add obesity and diabetes status to diabetes faraway data\ninch2m <- 2.54/100\npound2kg <- 0.45\ndata_diabetes <- diabetes %>%\n  mutate(height  = height * inch2m, height = round(height, 2)) %>% \n  mutate(waist = waist * inch2m) %>%  \n  mutate(weight = weight * pound2kg, weight = round(weight, 2)) %>%\n  mutate(BMI = weight / height^2, BMI = round(BMI, 2)) %>% \n  mutate(obese= cut(BMI, breaks = c(0, 29.9, 100), labels = c(\"No\", \"Yes\"))) %>% \n  mutate(diabetic = ifelse(glyhb > 7, \"Yes\", \"No\"), diabetic = factor(diabetic, levels = c(\"No\", \"Yes\"))) %>%\n  na.omit()\n```\n\nNumerical data, both discrete and continuous, can be visualized and summarized in many ways. Common plots include **histograms, density plots and scatter plots**. Summary statistics include **measures of location** such as mode and median and **measures of spread** such as variance or median absolute deviation. It is also common to visualize summary statistics, e.g. on box plot. \n\n```{mermaid} \n%%| label: fig-num-expanded\n%%| fig-align: center\n%%| fig-cap: \"Example of numerical summaries and graphical visualization applicable to numerical data\"\n%%| fig-cap-location: margin\n\nflowchart TD\n  A(Numerical data) --> B(Numerical summary)\n  A(Numerical data) --> C(Graphical summary)\n  B(Numerical summary) --> D(Measures of location <br/> e.g. mode, average, median)\n  B --> E(Measures of spread <br/> e.g. quartiles, variance, standard deviation)\n  C(Graphical summary) --> F(Histogram <br/> Density plot <br/> Box plot <br/> ...)\n```\n\n## Strip plot, Jittered strip plot & Beeswarm plot\n\nWhen the data set is not very big, i.e. does not contain millions of measurements for a given numerical variable of interest, it is recommended to visually assess all measurements on a plot. This can be done in a **1D scatter plot**, called also a strip plot or a dot plot. \n\nFor instance the `age` values for the 130 participants in the diabetes study are: \n```{r}\nprint(data_diabetes$age)\n```\n\nLet's visualize these age values using a strip plot.\n\n```{r}\n#| label: fig-stripplot\n#| fig-cap: A strip plot showing age values for the 130 study participants\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot strip plot\ndata_diabetes %>%\n  ggplot(aes(x = \"\", y = age)) + \n  geom_point() + \n  theme_bw() + \n  ylab(\"age\") + \n  xlab(\"\") + \n  my.ggtheme\n\n```\n\nAs year was recorded in years and we have over 100 participants, it happens that some age values are repeated, e.g. we have 2 participants who were 20 years old and 3 that were 30 years old at the time of study. These repeated measurements are shown on top of each other and we cannot see them all. A **jittered strip plot** attempts to reduce such overlays by randomly moving data points by small amounts to the left and right.\n```{r}\n#| fig-cap: A jittered strip plot showing age values for the 130 study participants\n#| label: fig-jitter-age\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot jittered strip plot\ndata_diabetes%>%\n  ggplot(aes(x = \"\", y = age)) + \n  geom_jitter(height = 0, width = 0.25) + \n  theme_bw() + \n  ylab(\"age\") + \n  xlab(\"\") + \n  my.ggtheme\n```\n\nIn a jittered strip plot some overlays may still occur, as the data points are moved at random. Further, many data points are moved unnecessarily. In a **beeswarm plot** data points are moved only when necessary, and even then the data point is only moved by the minimum distance required to avoid overlays.\n```{r}\n#| fig-cap: A beeswarm showing age values for the 130 study participants\n#| label: fig-beeswarm-age\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot beeswarm\ndata_diabetes %>%\n  ggplot(aes(x = \"\", y = age)) + \n  geom_beeswarm(cex = 2) + \n  theme_bw() + \n  ylab(\"age\") + \n  xlab(\"\") + \n  my.ggtheme\n\n```\n\n\n## Histogram & density plot\n\nA **histogram** bins the data and counts the number of observations that fall into each bin.\n```{r}\n#| fig-cap: A histogram summarizing age values for the 130 study participants\n#| label: fig-hist-age\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot histogram\ndata_diabetes %>%\n  ggplot(aes(x = age)) + \n  geom_histogram(binwidth = 5, center = 32.5, color = \"white\", fill = col.blue.dark) + \n  theme_bw() + \n  xlab(\"age\") + \n  my.ggtheme\n\n```\n\nA **density plot** is like a smoothed histogram where the total area under the curve is set to 1. A density plot is an approximation of a distribution.\n```{r}\n#| fig-cap: A density plot of age values for the 130 study participants\n#| label: fig-age-density\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot density plot\ndata_diabetes %>% ggplot(aes(x = age)) + \n  geom_density() + \n  theme_bw() + \n  xlab(\"age\") + \n  my.ggtheme\n\n```\n\n## Histogram & density plot stratified by group\n```{r}\n#| fig-cap: Histogram and density plots summarizing age values stratified by gender\n#| label: fig-hist-age-gender\n#| fig-width: 12\n#| fig-height: 8\n#| fig-cap-location: margin\n\n# plot histogram\np.hist <- data_diabetes %>%\n  ggplot(aes(x=age, fill=gender)) + \n  geom_histogram(bins=15, color=\"white\", alpha = 0.6) + \n  xlab(\"age\") + \n  theme_bw() + \n  scale_fill_brewer(palette = \"Dark2\") + \n  my.ggtheme\n\np.density <- data_diabetes %>%\n  ggplot(aes(x=age, fill=gender)) + \n  geom_density(alpha = 0.6) + \n  xlab(\"age\") + \n  theme_bw() + \n  scale_fill_brewer(palette = \"Dark2\") + \n  my.ggtheme\n\ngrid.arrange(arrangeGrob(p.hist, p.density, ncol=2))\n\n```\n\n\n## Scatter plot: 2 numerical variables\n\nScatter plots are useful when studying a relationship (association) between two numerical variables.\nLet's look at the weight and height for our 130 study participants.\n\n\n```{r}\n#| fig-cap: Scatter plot showing a relationship between weight and height\n#| label: fig-scatter-weight-height\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot scatter plot\ndata_diabetes %>%\n  ggplot(aes(x = weight, y = height)) + \n  geom_point() + \n  xlab(\"weight [kg]\") + \n  ylab(\"height [m]\") + \n  theme_bw() + \n  my.ggtheme\n\n```\n\n\n```{r}\n#| fig-cap: Scatter plot showing a relationship between weight and height stratified by gender\n#| label: fig-scatter-weight-height-by-gender\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot scatter plot\ndata_diabetes %>%\n  ggplot(aes(x = weight, y = height, color = gender)) +\n  geom_point() +\n  xlab(\"weight [kg]\") +\n  ylab(\"height [m]\") +\n  theme_bw() +\n  scale_color_brewer(palette = \"Dark2\") +\n  my.ggtheme\n\n```\n\nSometimes, it is useful to connect the observations in the order in which they appear, e.g. when analyzing time series data. The diabetes data set does not contain any measurements over time but we can simulate some BMI values over time for demonstration purposes. \n\n\n```{r}\n#| label: fig-line-plot-BMI\n#| fig-cap: A line plot for BMI simulated values over 12 weeks for 10 randomly selected study participants\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# simulate BMI over time\n# select participants with BMI >= 30\n# assign half to control group and half to treatment to reduce weight \n# add simulated weight loss values to treatment group ca. 0.2 kg per week\n# add simulated weight fluctuations, ca plus / minus 0.1 kg per week\n\ndata_diabetes_bmi30 <- data_diabetes %>% \n  filter(BMI >= 30) %>%\n  select(id, weight, height, BMI) %>%\n  mutate(group=sample(c(\"control\", \"treatment\"), size=n(), replace=TRUE))\n\n# add 52 weeks of simulated BMI values\n\nno_weeks <- 12\nweight_sim <- matrix(data = NA, \n                     nrow = nrow(data_diabetes_bmi30), \n                     ncol = no_weeks, \n                     dimnames = list(data_diabetes_bmi30$id, paste(\"week\", 1: no_weeks, sep=\"\"))) # initiate matrix to store simulated BMI values\nweight_sim[, 1] <- data_diabetes_bmi30$weight # first column: baseline weight\n\nfor (n in 1:nrow(data_diabetes_bmi30)){\n  \n  for (p in 2:ncol(weight_sim)){\n    \n    # if control group: just fluctuate weight by random values between 0 and 0.2 kg\n    # if treatment: decrease by random values between 0.1 and 0.5 kg from\n    \n    if (data_diabetes_bmi30$group[n] == \"treatment\"){\n     \n      loss <- runif(1, 0.1, 0.5) %>% round(1)\n      weight_sim[n, p] <- weight_sim[n, p-1] - loss\n      \n    } else{\n      \n      fluctuation <- runif(1, -0.2, 0.2) %>% round(1)\n      weight_sim[n, p] <- weight_sim[n, p-1] + fluctuation\n      \n    }\n  \n  }\n}\n\n# convert to tibble\nweight_sim <- weight_sim %>%\n  as_tibble(rownames = \"id\") %>%\n  mutate(id = as.numeric(id))\n\n# join data_diabetes_bmi30 with simulated\n# keep 5 treatment and 5 control participants\ndata_diabets_sim <- data_diabetes_bmi30 %>%\n  as_tibble() %>% \n  left_join(weight_sim, by = \"id\")\n\n# plot BMI over time\ndata_plot <- data_diabets_sim %>%\n  slice_sample(n = 10) %>%\n  select(-weight, -BMI) %>% \n  pivot_longer(-c(\"id\", \"group\", \"height\"), names_to = \"week\", values_to = \"weight\") %>% \n  mutate(BMI = weight / (height^2)) %>%\n  mutate(week = gsub(\"week\", \"\", week)) %>%\n  mutate(week = as.numeric(week)) \n\ndata_plot %>%\n  ggplot(aes(x = week, y = BMI, group = id)) + \n  geom_point() +\n  geom_line() + \n  xlab(\"week\") +\n  ylab(\"BMI\") +\n  theme_bw() +\n  scale_color_brewer(palette = \"Dark2\") +\n  scale_x_continuous(breaks= pretty_breaks()) + \n  my.ggtheme\n\n```\n\n```{r}\n#| fig-cap: A line plot for BMI simulated values over 12 weeks for 5 randomly selected study participants from control and treatment group\n#| label: fig-line-plot-BMI-by-group\n#| fig-cap-location: margin\n#| fig-width: 6\n\ndata_plot <- data_diabets_sim %>%\n  group_by(group) %>%\n  slice_sample(n = 5) %>%\n  select(-weight, -BMI) %>% \n  pivot_longer(-c(\"id\", \"group\", \"height\"), names_to = \"week\", values_to = \"weight\") %>% \n  mutate(BMI = weight / (height^2)) %>%\n  mutate(week = gsub(\"week\", \"\", week)) %>%\n  mutate(week = as.numeric(week)) \n\ndata_plot %>%\n  ggplot(aes(x = week, y = BMI, group = id, colour = group)) + \n  geom_point() +\n  geom_line() + \n  xlab(\"week\") +\n  ylab(\"BMI\") +\n  theme_bw() +\n  scale_color_brewer(palette = \"Dark2\") +\n  scale_x_continuous(breaks= pretty_breaks()) + \n  my.ggtheme\n\n```\n\n\n \n\n","srcMarkdownNoYaml":"\n# Numerical data\n\n```{r}\n#| message: false\n#| warning: false\n\n# load libraries\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(faraway)\nlibrary(scales)\nlibrary(ggbeeswarm)\nlibrary(gridExtra)\n\n# define generic ggplot theme\nfont.size <- 12\ncol.blue.light <- \"#a6cee3\"\ncol.blue.dark <- \"#1f78b4\"\nmy.ggtheme <- theme(axis.title = element_text(size = font.size), \n        axis.text = element_text(size = font.size), \n        legend.text = element_text(size = font.size), \n        legend.title = element_blank(), \n        legend.position = \"top\", \n        axis.title.y = element_text(angle = 0)) \n\n# add obesity and diabetes status to diabetes faraway data\ninch2m <- 2.54/100\npound2kg <- 0.45\ndata_diabetes <- diabetes %>%\n  mutate(height  = height * inch2m, height = round(height, 2)) %>% \n  mutate(waist = waist * inch2m) %>%  \n  mutate(weight = weight * pound2kg, weight = round(weight, 2)) %>%\n  mutate(BMI = weight / height^2, BMI = round(BMI, 2)) %>% \n  mutate(obese= cut(BMI, breaks = c(0, 29.9, 100), labels = c(\"No\", \"Yes\"))) %>% \n  mutate(diabetic = ifelse(glyhb > 7, \"Yes\", \"No\"), diabetic = factor(diabetic, levels = c(\"No\", \"Yes\"))) %>%\n  na.omit()\n```\n\nNumerical data, both discrete and continuous, can be visualized and summarized in many ways. Common plots include **histograms, density plots and scatter plots**. Summary statistics include **measures of location** such as mode and median and **measures of spread** such as variance or median absolute deviation. It is also common to visualize summary statistics, e.g. on box plot. \n\n```{mermaid} \n%%| label: fig-num-expanded\n%%| fig-align: center\n%%| fig-cap: \"Example of numerical summaries and graphical visualization applicable to numerical data\"\n%%| fig-cap-location: margin\n\nflowchart TD\n  A(Numerical data) --> B(Numerical summary)\n  A(Numerical data) --> C(Graphical summary)\n  B(Numerical summary) --> D(Measures of location <br/> e.g. mode, average, median)\n  B --> E(Measures of spread <br/> e.g. quartiles, variance, standard deviation)\n  C(Graphical summary) --> F(Histogram <br/> Density plot <br/> Box plot <br/> ...)\n```\n\n## Strip plot, Jittered strip plot & Beeswarm plot\n\nWhen the data set is not very big, i.e. does not contain millions of measurements for a given numerical variable of interest, it is recommended to visually assess all measurements on a plot. This can be done in a **1D scatter plot**, called also a strip plot or a dot plot. \n\nFor instance the `age` values for the 130 participants in the diabetes study are: \n```{r}\nprint(data_diabetes$age)\n```\n\nLet's visualize these age values using a strip plot.\n\n```{r}\n#| label: fig-stripplot\n#| fig-cap: A strip plot showing age values for the 130 study participants\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot strip plot\ndata_diabetes %>%\n  ggplot(aes(x = \"\", y = age)) + \n  geom_point() + \n  theme_bw() + \n  ylab(\"age\") + \n  xlab(\"\") + \n  my.ggtheme\n\n```\n\nAs year was recorded in years and we have over 100 participants, it happens that some age values are repeated, e.g. we have 2 participants who were 20 years old and 3 that were 30 years old at the time of study. These repeated measurements are shown on top of each other and we cannot see them all. A **jittered strip plot** attempts to reduce such overlays by randomly moving data points by small amounts to the left and right.\n```{r}\n#| fig-cap: A jittered strip plot showing age values for the 130 study participants\n#| label: fig-jitter-age\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot jittered strip plot\ndata_diabetes%>%\n  ggplot(aes(x = \"\", y = age)) + \n  geom_jitter(height = 0, width = 0.25) + \n  theme_bw() + \n  ylab(\"age\") + \n  xlab(\"\") + \n  my.ggtheme\n```\n\nIn a jittered strip plot some overlays may still occur, as the data points are moved at random. Further, many data points are moved unnecessarily. In a **beeswarm plot** data points are moved only when necessary, and even then the data point is only moved by the minimum distance required to avoid overlays.\n```{r}\n#| fig-cap: A beeswarm showing age values for the 130 study participants\n#| label: fig-beeswarm-age\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot beeswarm\ndata_diabetes %>%\n  ggplot(aes(x = \"\", y = age)) + \n  geom_beeswarm(cex = 2) + \n  theme_bw() + \n  ylab(\"age\") + \n  xlab(\"\") + \n  my.ggtheme\n\n```\n\n\n## Histogram & density plot\n\nA **histogram** bins the data and counts the number of observations that fall into each bin.\n```{r}\n#| fig-cap: A histogram summarizing age values for the 130 study participants\n#| label: fig-hist-age\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot histogram\ndata_diabetes %>%\n  ggplot(aes(x = age)) + \n  geom_histogram(binwidth = 5, center = 32.5, color = \"white\", fill = col.blue.dark) + \n  theme_bw() + \n  xlab(\"age\") + \n  my.ggtheme\n\n```\n\nA **density plot** is like a smoothed histogram where the total area under the curve is set to 1. A density plot is an approximation of a distribution.\n```{r}\n#| fig-cap: A density plot of age values for the 130 study participants\n#| label: fig-age-density\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot density plot\ndata_diabetes %>% ggplot(aes(x = age)) + \n  geom_density() + \n  theme_bw() + \n  xlab(\"age\") + \n  my.ggtheme\n\n```\n\n## Histogram & density plot stratified by group\n```{r}\n#| fig-cap: Histogram and density plots summarizing age values stratified by gender\n#| label: fig-hist-age-gender\n#| fig-width: 12\n#| fig-height: 8\n#| fig-cap-location: margin\n\n# plot histogram\np.hist <- data_diabetes %>%\n  ggplot(aes(x=age, fill=gender)) + \n  geom_histogram(bins=15, color=\"white\", alpha = 0.6) + \n  xlab(\"age\") + \n  theme_bw() + \n  scale_fill_brewer(palette = \"Dark2\") + \n  my.ggtheme\n\np.density <- data_diabetes %>%\n  ggplot(aes(x=age, fill=gender)) + \n  geom_density(alpha = 0.6) + \n  xlab(\"age\") + \n  theme_bw() + \n  scale_fill_brewer(palette = \"Dark2\") + \n  my.ggtheme\n\ngrid.arrange(arrangeGrob(p.hist, p.density, ncol=2))\n\n```\n\n\n## Scatter plot: 2 numerical variables\n\nScatter plots are useful when studying a relationship (association) between two numerical variables.\nLet's look at the weight and height for our 130 study participants.\n\n\n```{r}\n#| fig-cap: Scatter plot showing a relationship between weight and height\n#| label: fig-scatter-weight-height\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot scatter plot\ndata_diabetes %>%\n  ggplot(aes(x = weight, y = height)) + \n  geom_point() + \n  xlab(\"weight [kg]\") + \n  ylab(\"height [m]\") + \n  theme_bw() + \n  my.ggtheme\n\n```\n\n\n```{r}\n#| fig-cap: Scatter plot showing a relationship between weight and height stratified by gender\n#| label: fig-scatter-weight-height-by-gender\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# plot scatter plot\ndata_diabetes %>%\n  ggplot(aes(x = weight, y = height, color = gender)) +\n  geom_point() +\n  xlab(\"weight [kg]\") +\n  ylab(\"height [m]\") +\n  theme_bw() +\n  scale_color_brewer(palette = \"Dark2\") +\n  my.ggtheme\n\n```\n\nSometimes, it is useful to connect the observations in the order in which they appear, e.g. when analyzing time series data. The diabetes data set does not contain any measurements over time but we can simulate some BMI values over time for demonstration purposes. \n\n\n```{r}\n#| label: fig-line-plot-BMI\n#| fig-cap: A line plot for BMI simulated values over 12 weeks for 10 randomly selected study participants\n#| fig-cap-location: margin\n#| fig-width: 6\n\n# simulate BMI over time\n# select participants with BMI >= 30\n# assign half to control group and half to treatment to reduce weight \n# add simulated weight loss values to treatment group ca. 0.2 kg per week\n# add simulated weight fluctuations, ca plus / minus 0.1 kg per week\n\ndata_diabetes_bmi30 <- data_diabetes %>% \n  filter(BMI >= 30) %>%\n  select(id, weight, height, BMI) %>%\n  mutate(group=sample(c(\"control\", \"treatment\"), size=n(), replace=TRUE))\n\n# add 52 weeks of simulated BMI values\n\nno_weeks <- 12\nweight_sim <- matrix(data = NA, \n                     nrow = nrow(data_diabetes_bmi30), \n                     ncol = no_weeks, \n                     dimnames = list(data_diabetes_bmi30$id, paste(\"week\", 1: no_weeks, sep=\"\"))) # initiate matrix to store simulated BMI values\nweight_sim[, 1] <- data_diabetes_bmi30$weight # first column: baseline weight\n\nfor (n in 1:nrow(data_diabetes_bmi30)){\n  \n  for (p in 2:ncol(weight_sim)){\n    \n    # if control group: just fluctuate weight by random values between 0 and 0.2 kg\n    # if treatment: decrease by random values between 0.1 and 0.5 kg from\n    \n    if (data_diabetes_bmi30$group[n] == \"treatment\"){\n     \n      loss <- runif(1, 0.1, 0.5) %>% round(1)\n      weight_sim[n, p] <- weight_sim[n, p-1] - loss\n      \n    } else{\n      \n      fluctuation <- runif(1, -0.2, 0.2) %>% round(1)\n      weight_sim[n, p] <- weight_sim[n, p-1] + fluctuation\n      \n    }\n  \n  }\n}\n\n# convert to tibble\nweight_sim <- weight_sim %>%\n  as_tibble(rownames = \"id\") %>%\n  mutate(id = as.numeric(id))\n\n# join data_diabetes_bmi30 with simulated\n# keep 5 treatment and 5 control participants\ndata_diabets_sim <- data_diabetes_bmi30 %>%\n  as_tibble() %>% \n  left_join(weight_sim, by = \"id\")\n\n# plot BMI over time\ndata_plot <- data_diabets_sim %>%\n  slice_sample(n = 10) %>%\n  select(-weight, -BMI) %>% \n  pivot_longer(-c(\"id\", \"group\", \"height\"), names_to = \"week\", values_to = \"weight\") %>% \n  mutate(BMI = weight / (height^2)) %>%\n  mutate(week = gsub(\"week\", \"\", week)) %>%\n  mutate(week = as.numeric(week)) \n\ndata_plot %>%\n  ggplot(aes(x = week, y = BMI, group = id)) + \n  geom_point() +\n  geom_line() + \n  xlab(\"week\") +\n  ylab(\"BMI\") +\n  theme_bw() +\n  scale_color_brewer(palette = \"Dark2\") +\n  scale_x_continuous(breaks= pretty_breaks()) + \n  my.ggtheme\n\n```\n\n```{r}\n#| fig-cap: A line plot for BMI simulated values over 12 weeks for 5 randomly selected study participants from control and treatment group\n#| label: fig-line-plot-BMI-by-group\n#| fig-cap-location: margin\n#| fig-width: 6\n\ndata_plot <- data_diabets_sim %>%\n  group_by(group) %>%\n  slice_sample(n = 5) %>%\n  select(-weight, -BMI) %>% \n  pivot_longer(-c(\"id\", \"group\", \"height\"), names_to = \"week\", values_to = \"weight\") %>% \n  mutate(BMI = weight / (height^2)) %>%\n  mutate(week = gsub(\"week\", \"\", week)) %>%\n  mutate(week = as.numeric(week)) \n\ndata_plot %>%\n  ggplot(aes(x = week, y = BMI, group = id, colour = group)) + \n  geom_point() +\n  geom_line() + \n  xlab(\"week\") +\n  ylab(\"BMI\") +\n  theme_bw() +\n  scale_color_brewer(palette = \"Dark2\") +\n  scale_x_continuous(breaks= pretty_breaks()) + \n  my.ggtheme\n\n```\n\n\n \n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","self-contained":false,"output-file":"data-numerical.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}